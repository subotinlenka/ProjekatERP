CREATE OR REPLACE FUNCTION set_total_price() RETURNS TRIGGER AS $before_insert_order$
DECLARE
		price DECIMAL = (select orderamount from orders where orderid = new.orderid);
		deliveryfee DECIMAL = (select orderdeliveryfee from orders where orderid = new.orderid);
		total_price DECIMAL = price+deliveryfee;
    BEGIN
         update orders set ordertotalamount = total_price where orderid=new.orderid;
        RETURN NULL;
    END;
$before_insert_order$ LANGUAGE plpgsql;

CREATE TRIGGER before_insert_order
AFTER INSERT on orders
    FOR EACH ROW EXECUTE FUNCTION set_total_price();

select * from orders
	
INSERT INTO Orders
VALUES(nextval('orders_seq'), '2022-04-03', 12000, 500, 12200, 'Petra Drapsina 2',

CREATE OR REPLACE FUNCTION product_quantity_delete() RETURNS TRIGGER AS $after_product_delete$
DECLARE
	 quantity INTEGER = (select productquantity from products where productid = new.productid);
    BEGIN
         if(quantity = 0) THEN
		 	DELETE FROM products where productquantity = quantity;
		 end if;
		
        RETURN NULL;
    END;
$after_product_delete$ LANGUAGE plpgsql;

CREATE TRIGGER after_product_delete
AFTER INSERT ON products
    FOR EACH ROW EXECUTE FUNCTION product_quantity_delete();
	
INSERT INTO Products
VALUES(nextval('products_seq'), 'Tennis Bag', 'Wilson Tennis Bag', null, 0, 12500, 'https://tennisShop.com/images/wilsonBag3.jpg', false, null, 1, 2, 1);

select * from products
